name: PR Tests - JavaScript

on:
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
  push:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  CI: true

jobs:
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
      
    - name: Generate BDD tests
      run: npm run bdd:generate
      
    - name: Run smoke tests
      run: npx playwright test --project=${{ matrix.browser }} --grep="@Smoke"
      env:
        HEADLESS: true
        BASE_URL: https://www.perfectdraft.com
        SCREENSHOT_MODE: only-on-failure
        VIDEO_MODE: retain-on-failure
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.browser }}
        path: |
          test-results/
          allure-results/
        retention-days: 7
        
    - name: Upload Playwright report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 7

  regression:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
      
    - name: Generate BDD tests
      run: npm run bdd:generate
      
    - name: Run regression tests
      run: npx playwright test --project=${{ matrix.browser }} --grep="@P1|@P2"
      env:
        HEADLESS: true
        BASE_URL: https://www.perfectdraft.com
        SCREENSHOT_MODE: only-on-failure
        VIDEO_MODE: retain-on-failure
        
    - name: Upload regression results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: regression-results-${{ matrix.browser }}
        path: |
          test-results/
          allure-results/
        retention-days: 14

  allure-report:
    runs-on: ubuntu-latest
    needs: [test, regression]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Merge allure results
      run: |
        mkdir -p allure-results
        find artifacts -name "allure-results" -type d -exec cp -r {}/* allure-results/ \;
        
    - name: Generate Allure report
      run: npm run allure:generate
      
    - name: Upload Allure report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        retention-days: 14
        
    - name: Deploy to GitHub Pages
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./allure-report
        destination_dir: reports
        
  notify:
    runs-on: ubuntu-latest
    needs: [test, regression, allure-report]
    if: always() && github.event_name == 'pull_request'
    
    steps:
    - name: Comment PR with results
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const { number: issue_number } = context.issue;
          
          const testJob = '${{ needs.test.result }}';
          const regressionJob = '${{ needs.regression.result }}';
          
          const testEmoji = testJob === 'success' ? '✅' : testJob === 'failure' ? '❌' : '⏭️';
          const regressionEmoji = regressionJob === 'success' ? '✅' : regressionJob === 'failure' ? '❌' : '⏭️';
          
          const body = `## 🤖 Test Results
          
          | Test Suite | Status | Result |
          |------------|--------|---------|
          | Smoke Tests | ${testEmoji} | ${testJob} |
          | Regression Tests | ${regressionEmoji} | ${regressionJob || 'skipped'} |
          
          📊 [View Allure Report](https://github.com/${owner}/${repo}/actions/runs/${{ github.run_id }})
          
          > JavaScript Playwright Tests with BDD`;
          
          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number,
            body
          });