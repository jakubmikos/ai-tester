name: PR Tests

on:
  pull_request:
    branches: [ main, dotnet ]
  push:
    branches: [ main, dotnet ]

jobs:
  test:
    runs-on: ubuntu-latest
    container: 
      image: mcr.microsoft.com/playwright/dotnet:latest
      options: --ipc=host
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build project
      run: dotnet build --no-restore --configuration Release
      
    - name: Setup Node.js for Allure
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Allure CLI
      run: npm install -g allure-commandline
      
    - name: Run Level 1 tests (Smoke)
      run: dotnet test --no-build --configuration Release --filter "TestCategory=Smoke" --logger "trx;LogFileName=smoke-tests.trx" --collect:"XPlat Code Coverage"
      continue-on-error: false
      
    #- name: Run Level 1 tests (P1)
    #  run: dotnet test --no-build --configuration Release --filter "TestCategory=P1" --logger "trx;LogFileName=level1-tests.trx" --collect:"XPlat Code Coverage"
    #  continue-on-error: true
      
    #- name: Run Country Selection tests
    #  run: dotnet test --no-build --configuration Release --filter "TestCategory=CountrySelection" --logger "trx;LogFileName=country-selection-tests.trx" --collect:"XPlat Code Coverage"
    #  continue-on-error: true
      
    #- name: Run Navigation tests
    #  run: dotnet test --no-build --configuration Release --filter "TestCategory=Navigation" --logger "trx;LogFileName=navigation-tests.trx" --collect:"XPlat Code Coverage"
    #  continue-on-error: true
      
    - name: Generate Allure Report  
      if: always()
      run: |
        if [ -d "bin/Release/net8.0/allure-results" ]; then
          allure generate bin/Release/net8.0/allure-results -o allure-report --clean --single-file
          echo "✅ Allure report generated successfully with --single-file option"
        else
          echo "❌ No allure-results directory found in bin/Release/net8.0/"
          find . -name "allure-results" -type d
          exit 1
        fi
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          TestResults/**/*.trx
          TestResults/**/*.xml
          TestResults/**/coverage.cobertura.xml
        retention-days: 30
        
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30
        
    - name: Generate Test Summary
      if: always()
      run: |
        echo "## 🧪 Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "allure-report/widgets/summary.json" ]; then
          # Extract test metrics from Allure summary
          TOTAL=$(jq -r '.statistic.total' allure-report/widgets/summary.json)
          PASSED=$(jq -r '.statistic.passed' allure-report/widgets/summary.json)
          FAILED=$(jq -r '.statistic.failed' allure-report/widgets/summary.json)
          BROKEN=$(jq -r '.statistic.broken' allure-report/widgets/summary.json)
          SKIPPED=$(jq -r '.statistic.skipped' allure-report/widgets/summary.json)
          
          echo "| Metric | Count |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Total Tests | $TOTAL |" >> $GITHUB_STEP_SUMMARY
          echo "| ✅ Passed | $PASSED |" >> $GITHUB_STEP_SUMMARY
          echo "| ❌ Failed | $FAILED |" >> $GITHUB_STEP_SUMMARY
          echo "| 💥 Broken | $BROKEN |" >> $GITHUB_STEP_SUMMARY
          echo "| ⏭️ Skipped | $SKIPPED |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Calculate success rate
          if [ "$TOTAL" -gt 0 ]; then
            SUCCESS_RATE=$(echo "scale=1; $PASSED * 100 / $TOTAL" | bc)
            echo "**Success Rate: ${SUCCESS_RATE}%**" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "❌ No Allure summary found" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📊 **Download full Allure report from the artifacts section above**" >> $GITHUB_STEP_SUMMARY
        
    - name: Upload Playwright videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-videos
        path: |
          test-results/
          playwright-report/
        retention-days: 7
