name: PR Tests

on:
  pull_request:
    branches: [ main, dotnet ]
  push:
    branches: [ main, dotnet ]

jobs:
  test:
    runs-on: ubuntu-latest
    container: 
      image: mcr.microsoft.com/playwright/dotnet:v1.46.0-jammy
      options: --ipc=host
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build project
      run: dotnet build --no-restore --configuration Release

    - name: Install Playwright browsers
      run: pwsh bin/Release/net8.0/playwright.ps1 install --with-deps
      
    - name: Setup Node.js for Allure
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Allure CLI
      run: npm install -g allure-commandline
      
    - name: Run Level 1 tests (Smoke)
      run: dotnet test --no-build --configuration Release --filter "Category=Smoke" --logger "trx;LogFileName=smoke-tests.trx" --collect:"XPlat Code Coverage"
      continue-on-error: false
      
    #- name: Run Level 1 tests (P1)
    #  run: dotnet test --no-build --configuration Release --filter "Category=P1" --logger "trx;LogFileName=level1-tests.trx" --collect:"XPlat Code Coverage"
    #  continue-on-error: true
      
    #- name: Run Country Selection tests
    #  run: dotnet test --no-build --configuration Release --filter "Category=CountrySelection" --logger "trx;LogFileName=country-selection-tests.trx" --collect:"XPlat Code Coverage"
    #  continue-on-error: true
      
    #- name: Run Navigation tests
    #  run: dotnet test --no-build --configuration Release --filter "Category=Navigation" --logger "trx;LogFileName=navigation-tests.trx" --collect:"XPlat Code Coverage"
    #  continue-on-error: true
      
    # - name: Generate Allure Report  
    #  if: always()
    #  run: |
    #    if [ -d "bin/Release/net8.0/allure-results" ]; then
    #      allure generate bin/Release/net8.0/allure-results -o allure-report --clean --single-file
    #      echo "✅ Allure report generated successfully with --single-file option"
    #    else
    #      echo "❌ No allure-results directory found in bin/Release/net8.0/"
    #      find . -name "allure-results" -type d
    #      exit 1
    #    fi
    
    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: bin/Release/net8.0/allure-results
        allure_report: allure-report
        gh_pages: gh-pages
        allure_history: allure-history


    - name: Deploy report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.ALLURE_GH_PAGES_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: allure-history
